/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */
#ifndef __ALTER_SYSTEM_PROPERTIES_H__
#define __ALTER_SYSTEM_PROPERTIES_H__

namespace gpudb
{
    /**
     * A set of parameters for @ref
     * GPUdb::alterSystemProperties(const AlterSystemPropertiesRequest&) const
     * "GPUdb::alterSystemProperties".
     *
     * The @ref
     * GPUdb::alterSystemProperties(const AlterSystemPropertiesRequest&) const
     * "GPUdb::alterSystemProperties" endpoint is primarily used to simplify
     * the testing of the system and is not expected to be used during normal
     * execution.  Commands are given through the @ref propertyUpdatesMap whose
     * keys are commands and values are strings representing integer values
     * (for example '8000') or boolean values ('true' or 'false').
     */
    struct AlterSystemPropertiesRequest
    {
        /**
         * Constructs an AlterSystemPropertiesRequest object with default
         * parameters.
         */
        AlterSystemPropertiesRequest() :
            propertyUpdatesMap(std::map<std::string, std::string>()),
            options(std::map<std::string, std::string>())
        {
        }

        /**
         * Constructs an AlterSystemPropertiesRequest object with the specified
         * parameters.
         *
         * @param[in] propertyUpdatesMap_  Map containing the properties of the
         *                                 system to be updated. Error if
         *                                 empty.
         *                                 <ul>
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_concurrent_kernel_execution
         *                                         "alter_system_properties_concurrent_kernel_execution":
         *                                         Enables concurrent kernel
         *                                         execution if the value is
         *                                         @ref
         *                                         gpudb::alter_system_properties_true
         *                                         "true" and disables it if
         *                                         the value is @ref
         *                                         gpudb::alter_system_properties_false
         *                                         "false".
         *                                         Supported values:
         *                                         <ul>
         *                                             <li>@ref
         *                                                 gpudb::alter_system_properties_true
         *                                                 "alter_system_properties_true"
         *                                             <li>@ref
         *                                                 gpudb::alter_system_properties_false
         *                                                 "alter_system_properties_false"
         *                                         </ul>
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_subtask_concurrency_limit
         *                                         "alter_system_properties_subtask_concurrency_limit":
         *                                         Sets the maximum number of
         *                                         simultaneous threads
         *                                         allocated to a given
         *                                         request, on each rank. Note
         *                                         that thread allocation may
         *                                         also be limted by resource
         *                                         group limits and/or system
         *                                         load.
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_chunk_size
         *                                         "alter_system_properties_chunk_size":
         *                                         Sets the number of records
         *                                         per chunk to be used for all
         *                                         new tables.
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_chunk_column_max_memory
         *                                         "alter_system_properties_chunk_column_max_memory":
         *                                         Sets the target maximum data
         *                                         size for each column in a
         *                                         chunk to be used for all new
         *                                         tables.
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_chunk_max_memory
         *                                         "alter_system_properties_chunk_max_memory":
         *                                         Indicates the target maximum
         *                                         data size for all columns in
         *                                         a chunk to be used for all
         *                                         new tables.
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_evict_columns
         *                                         "alter_system_properties_evict_columns":
         *                                         Attempts to evict columns
         *                                         from memory to the
         *                                         persistent store.  Value
         *                                         string is a semicolon
         *                                         separated list of entries,
         *                                         each entry being a table
         *                                         name optionally followed by
         *                                         a comma and a comma
         *                                         separated list of column
         *                                         names to attempt to evict.
         *                                         An empty value string will
         *                                         attempt to evict all tables
         *                                         and columns.
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_execution_mode
         *                                         "alter_system_properties_execution_mode":
         *                                         Sets the execution_mode for
         *                                         kernel executions to the
         *                                         specified string value.
         *                                         Possible values are host,
         *                                         device, default (engine
         *                                         decides) or an integer value
         *                                         that indicates max chunk
         *                                         size to exec on host
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_external_files_directory
         *                                         "alter_system_properties_external_files_directory":
         *                                         Sets the root directory path
         *                                         where external table data
         *                                         files are accessed from.
         *                                         Path must exist on the head
         *                                         node
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_flush_to_disk
         *                                         "alter_system_properties_flush_to_disk":
         *                                         Flushes any changes to any
         *                                         tables to the persistent
         *                                         store.  These changes
         *                                         include updates to the
         *                                         vector store, object store,
         *                                         and text search store.
         *                                         Value string can be 'true',
         *                                         'false' or 'text_search' to
         *                                         flush the text search store
         *                                         only.
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_clear_cache
         *                                         "alter_system_properties_clear_cache":
         *                                         Clears cached results.
         *                                         Useful to allow repeated
         *                                         timing of endpoints.  Value
         *                                         string is the name of the
         *                                         table for which to clear the
         *                                         cached results, or an empty
         *                                         string to clear the cached
         *                                         results for all tables.
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_communicator_test
         *                                         "alter_system_properties_communicator_test":
         *                                         Invoke the communicator test
         *                                         and report timing results.
         *                                         Value string is a semicolon
         *                                         separated list of
         *                                         [key]=[value] expressions.
         *                                         Expressions are:
         *                                         num_transactions=[num] where
         *                                         num is the number of request
         *                                         reply transactions to invoke
         *                                         per test;
         *                                         message_size=[bytes] where
         *                                         bytes is the size in bytes
         *                                         of the messages to send;
         *                                         check_values=[enabled] where
         *                                         if enabled is true the value
         *                                         of the messages received are
         *                                         verified.
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_network_speed
         *                                         "alter_system_properties_network_speed":
         *                                         Invoke the network speed
         *                                         test and report timing
         *                                         results. Value string is a
         *                                         semicolon-separated list of
         *                                         [key]=[value] expressions.
         *                                         Valid expressions are:
         *                                         seconds=[time] where time is
         *                                         the time in seconds to run
         *                                         the test; data_size=[bytes]
         *                                         where bytes is the size in
         *                                         bytes of the block to be
         *                                         transferred; threads=[number
         *                                         of threads];
         *                                         to_ranks=[space-separated
         *                                         list of ranks] where the
         *                                         list of ranks is the ranks
         *                                         that rank 0 will send data
         *                                         to and get data from. If
         *                                         to_ranks is unspecified then
         *                                         all worker ranks are used.
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_request_timeout
         *                                         "alter_system_properties_request_timeout":
         *                                         Number of minutes after
         *                                         which filtering (e.g., @ref
         *                                         GPUdb::filter(const FilterRequest&) const
         *                                         "GPUdb::filter") and
         *                                         aggregating (e.g., @ref
         *                                         GPUdb::aggregateGroupBy(const AggregateGroupByRequest&) const
         *                                         "GPUdb::aggregateGroupBy")
         *                                         queries will timeout. The
         *                                         default value is '20'. The
         *                                         minimum allowed value is
         *                                         '0'. The maximum allowed
         *                                         value is '1440'.
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_max_get_records_size
         *                                         "alter_system_properties_max_get_records_size":
         *                                         The maximum number of
         *                                         records the database will
         *                                         serve for a given data
         *                                         retrieval call. The default
         *                                         value is '20000'. The
         *                                         minimum allowed value is
         *                                         '0'. The maximum allowed
         *                                         value is '1000000'.
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_max_grbc_batch_size
         *                                         "alter_system_properties_max_grbc_batch_size":
         *                                         &lt;DEVELOPER&gt;
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_enable_audit
         *                                         "alter_system_properties_enable_audit":
         *                                         Enable or disable auditing.
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_audit_headers
         *                                         "alter_system_properties_audit_headers":
         *                                         Enable or disable auditing
         *                                         of request headers.
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_audit_body
         *                                         "alter_system_properties_audit_body":
         *                                         Enable or disable auditing
         *                                         of request bodies.
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_audit_data
         *                                         "alter_system_properties_audit_data":
         *                                         Enable or disable auditing
         *                                         of request data.
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_audit_response
         *                                         "alter_system_properties_audit_response":
         *                                         Enable or disable auditing
         *                                         of response information.
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_shadow_agg_size
         *                                         "alter_system_properties_shadow_agg_size":
         *                                         Size of the shadow aggregate
         *                                         chunk cache in bytes. The
         *                                         default value is '10000000'.
         *                                         The minimum allowed value is
         *                                         '0'. The maximum allowed
         *                                         value is '2147483647'.
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_shadow_filter_size
         *                                         "alter_system_properties_shadow_filter_size":
         *                                         Size of the shadow filter
         *                                         chunk cache in bytes. The
         *                                         default value is '10000000'.
         *                                         The minimum allowed value is
         *                                         '0'. The maximum allowed
         *                                         value is '2147483647'.
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_synchronous_compression
         *                                         "alter_system_properties_synchronous_compression":
         *                                         compress vector on
         *                                         set_compression (instead of
         *                                         waiting for background
         *                                         thread). The default value
         *                                         is 'false'.
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_enable_overlapped_equi_join
         *                                         "alter_system_properties_enable_overlapped_equi_join":
         *                                         Enable overlapped-equi-join
         *                                         filter. The default value is
         *                                         'true'.
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_enable_one_step_compound_equi_join
         *                                         "alter_system_properties_enable_one_step_compound_equi_join":
         *                                         Enable the one_step
         *                                         compound-equi-join
         *                                         algorithm. The default value
         *                                         is 'true'.
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_kafka_batch_size
         *                                         "alter_system_properties_kafka_batch_size":
         *                                         Maximum number of records to
         *                                         be ingested in a single
         *                                         batch. The default value is
         *                                         '1000'. The minimum allowed
         *                                         value is '1'. The maximum
         *                                         allowed value is '10000000'.
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_kafka_poll_timeout
         *                                         "alter_system_properties_kafka_poll_timeout":
         *                                         Maximum time (milliseconds)
         *                                         for each poll to get records
         *                                         from kafka. The default
         *                                         value is '0'. The minimum
         *                                         allowed value is '0'. The
         *                                         maximum allowed value is
         *                                         '1000'.
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_kafka_wait_time
         *                                         "alter_system_properties_kafka_wait_time":
         *                                         Maximum time (seconds) to
         *                                         buffer records received from
         *                                         kafka before ingestion. The
         *                                         default value is '30'. The
         *                                         minimum allowed value is
         *                                         '1'. The maximum allowed
         *                                         value is '120'.
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_egress_parquet_compression
         *                                         "alter_system_properties_egress_parquet_compression":
         *                                         Parquet file compression
         *                                         type.
         *                                         Supported values:
         *                                         <ul>
         *                                             <li>@ref
         *                                                 gpudb::alter_system_properties_uncompressed
         *                                                 "alter_system_properties_uncompressed"
         *                                             <li>@ref
         *                                                 gpudb::alter_system_properties_snappy
         *                                                 "alter_system_properties_snappy"
         *                                             <li>@ref
         *                                                 gpudb::alter_system_properties_gzip
         *                                                 "alter_system_properties_gzip"
         *                                         </ul>
         *                                         The default value is @ref
         *                                         gpudb::alter_system_properties_snappy
         *                                         "alter_system_properties_snappy".
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_egress_single_file_max_size
         *                                         "alter_system_properties_egress_single_file_max_size":
         *                                         Max file size (in MB) to
         *                                         allow saving to a single
         *                                         file. May be overridden by
         *                                         target limitations. The
         *                                         default value is '10000'.
         *                                         The minimum allowed value is
         *                                         '1'. The maximum allowed
         *                                         value is '200000'.
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_max_concurrent_kernels
         *                                         "alter_system_properties_max_concurrent_kernels":
         *                                         Sets the
         *                                         max_concurrent_kernels value
         *                                         of the conf. The minimum
         *                                         allowed value is '0'. The
         *                                         maximum allowed value is
         *                                         '256'.
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_system_metadata_retention_period
         *                                         "alter_system_properties_system_metadata_retention_period":
         *                                         Sets the
         *                                         system_metadata.retention_period
         *                                         value of the conf. The
         *                                         minimum allowed value is
         *                                         '1'.
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_tcs_per_tom
         *                                         "alter_system_properties_tcs_per_tom":
         *                                         Sets the tcs_per_tom value
         *                                         of the conf. The minimum
         *                                         allowed value is '2'. The
         *                                         maximum allowed value is
         *                                         '8192'.
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_tps_per_tom
         *                                         "alter_system_properties_tps_per_tom":
         *                                         Sets the tps_per_tom value
         *                                         of the conf. The minimum
         *                                         allowed value is '2'. The
         *                                         maximum allowed value is
         *                                         '8192'.
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_ai_enable_rag
         *                                         "alter_system_properties_ai_enable_rag":
         *                                         Enable RAG. The default
         *                                         value is 'false'.
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_ai_api_provider
         *                                         "alter_system_properties_ai_api_provider":
         *                                         AI API provider type
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_ai_api_url
         *                                         "alter_system_properties_ai_api_url":
         *                                         AI API URL
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_ai_api_key
         *                                         "alter_system_properties_ai_api_key":
         *                                         AI API key
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_ai_api_connection_timeout
         *                                         "alter_system_properties_ai_api_connection_timeout":
         *                                         AI API connection timeout in
         *                                         seconds
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_ai_api_embeddings_model
         *                                         "alter_system_properties_ai_api_embeddings_model":
         *                                         AI API model name
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_telm_persist_query_metrics
         *                                         "alter_system_properties_telm_persist_query_metrics":
         *                                         Enable or disable persisting
         *                                         of query metrics.
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_postgres_proxy_idle_connection_timeout
         *                                         "alter_system_properties_postgres_proxy_idle_connection_timeout":
         *                                         Idle connection timeout in
         *                                         seconds
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_postgres_proxy_keep_alive
         *                                         "alter_system_properties_postgres_proxy_keep_alive":
         *                                         Enable  postgres proxy keep
         *                                         alive. The default value is
         *                                         'false'.
         *                                     <li>@ref
         *                                         gpudb::alter_system_properties_kifs_directory_data_limit
         *                                         "alter_system_properties_kifs_directory_data_limit":
         *                                         The default maximum capacity
         *                                         to apply when creating a
         *                                         KiFS directory (bytes). The
         *                                         minimum allowed value is
         *                                         '-1'.
         *                                 </ul>
         * @param[in] options_  Optional parameters.
         *                      <ul>
         *                          <li>@ref
         *                              gpudb::alter_system_properties_evict_to_cold
         *                              "alter_system_properties_evict_to_cold":
         *                              If @ref
         *                              gpudb::alter_system_properties_true
         *                              "true" and evict_columns is specified,
         *                              the given objects will be evicted to
         *                              cold storage (if such a tier exists).
         *                              Supported values:
         *                              <ul>
         *                                  <li>@ref
         *                                      gpudb::alter_system_properties_true
         *                                      "alter_system_properties_true"
         *                                  <li>@ref
         *                                      gpudb::alter_system_properties_false
         *                                      "alter_system_properties_false"
         *                              </ul>
         *                          <li>@ref
         *                              gpudb::alter_system_properties_persist
         *                              "alter_system_properties_persist": If
         *                              @ref
         *                              gpudb::alter_system_properties_true
         *                              "true" the system configuration will be
         *                              written to disk upon successful
         *                              application of this request. This will
         *                              commit the changes from this request
         *                              and any additional in-memory
         *                              modifications.
         *                              Supported values:
         *                              <ul>
         *                                  <li>@ref
         *                                      gpudb::alter_system_properties_true
         *                                      "alter_system_properties_true"
         *                                  <li>@ref
         *                                      gpudb::alter_system_properties_false
         *                                      "alter_system_properties_false"
         *                              </ul>
         *                              The default value is @ref
         *                              gpudb::alter_system_properties_true
         *                              "alter_system_properties_true".
         *                      </ul>
         *                      The default value is an empty map.
         */
        AlterSystemPropertiesRequest(const std::map<std::string, std::string>& propertyUpdatesMap_, const std::map<std::string, std::string>& options_):
            propertyUpdatesMap( propertyUpdatesMap_ ),
            options( options_ )
        {
        }

        /**
         * Map containing the properties of the system to be updated. Error if
         * empty.
         * <ul>
         *     <li>@ref
         *         gpudb::alter_system_properties_concurrent_kernel_execution
         *         "alter_system_properties_concurrent_kernel_execution":
         *         Enables concurrent kernel execution if the value is @ref
         *         gpudb::alter_system_properties_true "true" and disables it
         *         if the value is @ref gpudb::alter_system_properties_false
         *         "false".
         *         Supported values:
         *         <ul>
         *             <li>@ref gpudb::alter_system_properties_true
         *                 "alter_system_properties_true"
         *             <li>@ref gpudb::alter_system_properties_false
         *                 "alter_system_properties_false"
         *         </ul>
         *     <li>@ref
         *         gpudb::alter_system_properties_subtask_concurrency_limit
         *         "alter_system_properties_subtask_concurrency_limit": Sets
         *         the maximum number of simultaneous threads allocated to a
         *         given request, on each rank. Note that thread allocation may
         *         also be limted by resource group limits and/or system load.
         *     <li>@ref gpudb::alter_system_properties_chunk_size
         *         "alter_system_properties_chunk_size": Sets the number of
         *         records per chunk to be used for all new tables.
         *     <li>@ref gpudb::alter_system_properties_chunk_column_max_memory
         *         "alter_system_properties_chunk_column_max_memory": Sets the
         *         target maximum data size for each column in a chunk to be
         *         used for all new tables.
         *     <li>@ref gpudb::alter_system_properties_chunk_max_memory
         *         "alter_system_properties_chunk_max_memory": Indicates the
         *         target maximum data size for all columns in a chunk to be
         *         used for all new tables.
         *     <li>@ref gpudb::alter_system_properties_evict_columns
         *         "alter_system_properties_evict_columns": Attempts to evict
         *         columns from memory to the persistent store.  Value string
         *         is a semicolon separated list of entries, each entry being a
         *         table name optionally followed by a comma and a comma
         *         separated list of column names to attempt to evict.  An
         *         empty value string will attempt to evict all tables and
         *         columns.
         *     <li>@ref gpudb::alter_system_properties_execution_mode
         *         "alter_system_properties_execution_mode": Sets the
         *         execution_mode for kernel executions to the specified string
         *         value. Possible values are host, device, default (engine
         *         decides) or an integer value that indicates max chunk size
         *         to exec on host
         *     <li>@ref gpudb::alter_system_properties_external_files_directory
         *         "alter_system_properties_external_files_directory": Sets the
         *         root directory path where external table data files are
         *         accessed from.  Path must exist on the head node
         *     <li>@ref gpudb::alter_system_properties_flush_to_disk
         *         "alter_system_properties_flush_to_disk": Flushes any changes
         *         to any tables to the persistent store.  These changes
         *         include updates to the vector store, object store, and text
         *         search store.  Value string can be 'true', 'false' or
         *         'text_search' to flush the text search store only.
         *     <li>@ref gpudb::alter_system_properties_clear_cache
         *         "alter_system_properties_clear_cache": Clears cached
         *         results.  Useful to allow repeated timing of endpoints.
         *         Value string is the name of the table for which to clear the
         *         cached results, or an empty string to clear the cached
         *         results for all tables.
         *     <li>@ref gpudb::alter_system_properties_communicator_test
         *         "alter_system_properties_communicator_test": Invoke the
         *         communicator test and report timing results. Value string is
         *         a semicolon separated list of [key]=[value] expressions.
         *         Expressions are: num_transactions=[num] where num is the
         *         number of request reply transactions to invoke per test;
         *         message_size=[bytes] where bytes is the size in bytes of the
         *         messages to send; check_values=[enabled] where if enabled is
         *         true the value of the messages received are verified.
         *     <li>@ref gpudb::alter_system_properties_network_speed
         *         "alter_system_properties_network_speed": Invoke the network
         *         speed test and report timing results. Value string is a
         *         semicolon-separated list of [key]=[value] expressions.
         *         Valid expressions are: seconds=[time] where time is the time
         *         in seconds to run the test; data_size=[bytes] where bytes is
         *         the size in bytes of the block to be transferred;
         *         threads=[number of threads]; to_ranks=[space-separated list
         *         of ranks] where the list of ranks is the ranks that rank 0
         *         will send data to and get data from. If to_ranks is
         *         unspecified then all worker ranks are used.
         *     <li>@ref gpudb::alter_system_properties_request_timeout
         *         "alter_system_properties_request_timeout": Number of minutes
         *         after which filtering (e.g., @ref
         *         GPUdb::filter(const FilterRequest&) const "GPUdb::filter")
         *         and aggregating (e.g., @ref
         *         GPUdb::aggregateGroupBy(const AggregateGroupByRequest&) const
         *         "GPUdb::aggregateGroupBy") queries will timeout. The default
         *         value is '20'. The minimum allowed value is '0'. The maximum
         *         allowed value is '1440'.
         *     <li>@ref gpudb::alter_system_properties_max_get_records_size
         *         "alter_system_properties_max_get_records_size": The maximum
         *         number of records the database will serve for a given data
         *         retrieval call. The default value is '20000'. The minimum
         *         allowed value is '0'. The maximum allowed value is
         *         '1000000'.
         *     <li>@ref gpudb::alter_system_properties_max_grbc_batch_size
         *         "alter_system_properties_max_grbc_batch_size":
         *         &lt;DEVELOPER&gt;
         *     <li>@ref gpudb::alter_system_properties_enable_audit
         *         "alter_system_properties_enable_audit": Enable or disable
         *         auditing.
         *     <li>@ref gpudb::alter_system_properties_audit_headers
         *         "alter_system_properties_audit_headers": Enable or disable
         *         auditing of request headers.
         *     <li>@ref gpudb::alter_system_properties_audit_body
         *         "alter_system_properties_audit_body": Enable or disable
         *         auditing of request bodies.
         *     <li>@ref gpudb::alter_system_properties_audit_data
         *         "alter_system_properties_audit_data": Enable or disable
         *         auditing of request data.
         *     <li>@ref gpudb::alter_system_properties_audit_response
         *         "alter_system_properties_audit_response": Enable or disable
         *         auditing of response information.
         *     <li>@ref gpudb::alter_system_properties_shadow_agg_size
         *         "alter_system_properties_shadow_agg_size": Size of the
         *         shadow aggregate chunk cache in bytes. The default value is
         *         '10000000'. The minimum allowed value is '0'. The maximum
         *         allowed value is '2147483647'.
         *     <li>@ref gpudb::alter_system_properties_shadow_filter_size
         *         "alter_system_properties_shadow_filter_size": Size of the
         *         shadow filter chunk cache in bytes. The default value is
         *         '10000000'. The minimum allowed value is '0'. The maximum
         *         allowed value is '2147483647'.
         *     <li>@ref gpudb::alter_system_properties_synchronous_compression
         *         "alter_system_properties_synchronous_compression": compress
         *         vector on set_compression (instead of waiting for background
         *         thread). The default value is 'false'.
         *     <li>@ref
         *         gpudb::alter_system_properties_enable_overlapped_equi_join
         *         "alter_system_properties_enable_overlapped_equi_join":
         *         Enable overlapped-equi-join filter. The default value is
         *         'true'.
         *     <li>@ref
         *         gpudb::alter_system_properties_enable_one_step_compound_equi_join
         *         "alter_system_properties_enable_one_step_compound_equi_join":
         *         Enable the one_step compound-equi-join algorithm. The
         *         default value is 'true'.
         *     <li>@ref gpudb::alter_system_properties_kafka_batch_size
         *         "alter_system_properties_kafka_batch_size": Maximum number
         *         of records to be ingested in a single batch. The default
         *         value is '1000'. The minimum allowed value is '1'. The
         *         maximum allowed value is '10000000'.
         *     <li>@ref gpudb::alter_system_properties_kafka_poll_timeout
         *         "alter_system_properties_kafka_poll_timeout": Maximum time
         *         (milliseconds) for each poll to get records from kafka. The
         *         default value is '0'. The minimum allowed value is '0'. The
         *         maximum allowed value is '1000'.
         *     <li>@ref gpudb::alter_system_properties_kafka_wait_time
         *         "alter_system_properties_kafka_wait_time": Maximum time
         *         (seconds) to buffer records received from kafka before
         *         ingestion. The default value is '30'. The minimum allowed
         *         value is '1'. The maximum allowed value is '120'.
         *     <li>@ref
         *         gpudb::alter_system_properties_egress_parquet_compression
         *         "alter_system_properties_egress_parquet_compression":
         *         Parquet file compression type.
         *         Supported values:
         *         <ul>
         *             <li>@ref gpudb::alter_system_properties_uncompressed
         *                 "alter_system_properties_uncompressed"
         *             <li>@ref gpudb::alter_system_properties_snappy
         *                 "alter_system_properties_snappy"
         *             <li>@ref gpudb::alter_system_properties_gzip
         *                 "alter_system_properties_gzip"
         *         </ul>
         *         The default value is @ref
         *         gpudb::alter_system_properties_snappy
         *         "alter_system_properties_snappy".
         *     <li>@ref
         *         gpudb::alter_system_properties_egress_single_file_max_size
         *         "alter_system_properties_egress_single_file_max_size": Max
         *         file size (in MB) to allow saving to a single file. May be
         *         overridden by target limitations. The default value is
         *         '10000'. The minimum allowed value is '1'. The maximum
         *         allowed value is '200000'.
         *     <li>@ref gpudb::alter_system_properties_max_concurrent_kernels
         *         "alter_system_properties_max_concurrent_kernels": Sets the
         *         max_concurrent_kernels value of the conf. The minimum
         *         allowed value is '0'. The maximum allowed value is '256'.
         *     <li>@ref
         *         gpudb::alter_system_properties_system_metadata_retention_period
         *         "alter_system_properties_system_metadata_retention_period":
         *         Sets the system_metadata.retention_period value of the conf.
         *         The minimum allowed value is '1'.
         *     <li>@ref gpudb::alter_system_properties_tcs_per_tom
         *         "alter_system_properties_tcs_per_tom": Sets the tcs_per_tom
         *         value of the conf. The minimum allowed value is '2'. The
         *         maximum allowed value is '8192'.
         *     <li>@ref gpudb::alter_system_properties_tps_per_tom
         *         "alter_system_properties_tps_per_tom": Sets the tps_per_tom
         *         value of the conf. The minimum allowed value is '2'. The
         *         maximum allowed value is '8192'.
         *     <li>@ref gpudb::alter_system_properties_ai_enable_rag
         *         "alter_system_properties_ai_enable_rag": Enable RAG. The
         *         default value is 'false'.
         *     <li>@ref gpudb::alter_system_properties_ai_api_provider
         *         "alter_system_properties_ai_api_provider": AI API provider
         *         type
         *     <li>@ref gpudb::alter_system_properties_ai_api_url
         *         "alter_system_properties_ai_api_url": AI API URL
         *     <li>@ref gpudb::alter_system_properties_ai_api_key
         *         "alter_system_properties_ai_api_key": AI API key
         *     <li>@ref
         *         gpudb::alter_system_properties_ai_api_connection_timeout
         *         "alter_system_properties_ai_api_connection_timeout": AI API
         *         connection timeout in seconds
         *     <li>@ref gpudb::alter_system_properties_ai_api_embeddings_model
         *         "alter_system_properties_ai_api_embeddings_model": AI API
         *         model name
         *     <li>@ref
         *         gpudb::alter_system_properties_telm_persist_query_metrics
         *         "alter_system_properties_telm_persist_query_metrics": Enable
         *         or disable persisting of query metrics.
         *     <li>@ref
         *         gpudb::alter_system_properties_postgres_proxy_idle_connection_timeout
         *         "alter_system_properties_postgres_proxy_idle_connection_timeout":
         *         Idle connection timeout in seconds
         *     <li>@ref
         *         gpudb::alter_system_properties_postgres_proxy_keep_alive
         *         "alter_system_properties_postgres_proxy_keep_alive": Enable
         *         postgres proxy keep alive. The default value is 'false'.
         *     <li>@ref
         *         gpudb::alter_system_properties_kifs_directory_data_limit
         *         "alter_system_properties_kifs_directory_data_limit": The
         *         default maximum capacity to apply when creating a KiFS
         *         directory (bytes). The minimum allowed value is '-1'.
         * </ul>
         */
        std::map<std::string, std::string> propertyUpdatesMap;

        /**
         * Optional parameters.
         * <ul>
         *     <li>@ref gpudb::alter_system_properties_evict_to_cold
         *         "alter_system_properties_evict_to_cold": If @ref
         *         gpudb::alter_system_properties_true "true" and evict_columns
         *         is specified, the given objects will be evicted to cold
         *         storage (if such a tier exists).
         *         Supported values:
         *         <ul>
         *             <li>@ref gpudb::alter_system_properties_true
         *                 "alter_system_properties_true"
         *             <li>@ref gpudb::alter_system_properties_false
         *                 "alter_system_properties_false"
         *         </ul>
         *     <li>@ref gpudb::alter_system_properties_persist
         *         "alter_system_properties_persist": If @ref
         *         gpudb::alter_system_properties_true "true" the system
         *         configuration will be written to disk upon successful
         *         application of this request. This will commit the changes
         *         from this request and any additional in-memory
         *         modifications.
         *         Supported values:
         *         <ul>
         *             <li>@ref gpudb::alter_system_properties_true
         *                 "alter_system_properties_true"
         *             <li>@ref gpudb::alter_system_properties_false
         *                 "alter_system_properties_false"
         *         </ul>
         *         The default value is @ref
         *         gpudb::alter_system_properties_true
         *         "alter_system_properties_true".
         * </ul>
         * The default value is an empty map.
         */
        std::map<std::string, std::string> options;
    };
} // end namespace gpudb

namespace avro
{
    template<> struct codec_traits<gpudb::AlterSystemPropertiesRequest>
    {
        static void encode(Encoder& e, const gpudb::AlterSystemPropertiesRequest& v)
        {
            ::avro::encode(e, v.propertyUpdatesMap);
            ::avro::encode(e, v.options);
        }

        static void decode(Decoder& d, gpudb::AlterSystemPropertiesRequest& v)
        {
            if (::avro::ResolvingDecoder *rd = dynamic_cast< ::avro::ResolvingDecoder*>(&d))
            {
                const std::vector<size_t> fo = rd->fieldOrder();

                for (std::vector<size_t>::const_iterator it = fo.begin(); it != fo.end(); ++it)
                {
                    switch (*it)
                    {
                        case 0:
                            ::avro::decode(d, v.propertyUpdatesMap);
                            break;

                        case 1:
                            ::avro::decode(d, v.options);
                            break;

                        default:
                            break;
                    }
                }
            }
            else
            {
                ::avro::decode(d, v.propertyUpdatesMap);
                ::avro::decode(d, v.options);
            }
        }
    };
} // end namespace avro

namespace gpudb
{
    /**
     * A set of results returned by @ref
     * GPUdb::alterSystemProperties(const AlterSystemPropertiesRequest&) const
     * "GPUdb::alterSystemProperties".
     */
    struct AlterSystemPropertiesResponse
    {
        /**
         * Constructs an AlterSystemPropertiesResponse object with default
         * parameters.
         */
        AlterSystemPropertiesResponse() :
            updatedPropertiesMap(std::map<std::string, std::string>()),
            info(std::map<std::string, std::string>())
        {
        }

        /**
         * Map of values updated; for speed tests, a map of values measured to
         * the measurement
         */
        std::map<std::string, std::string> updatedPropertiesMap;

        /**
         * Additional information.
         */
        std::map<std::string, std::string> info;
    };
} // end namespace gpudb

namespace avro
{
    template<> struct codec_traits<gpudb::AlterSystemPropertiesResponse>
    {
        static void encode(Encoder& e, const gpudb::AlterSystemPropertiesResponse& v)
        {
            ::avro::encode(e, v.updatedPropertiesMap);
            ::avro::encode(e, v.info);
        }

        static void decode(Decoder& d, gpudb::AlterSystemPropertiesResponse& v)
        {
            if (::avro::ResolvingDecoder *rd = dynamic_cast< ::avro::ResolvingDecoder*>(&d))
            {
                const std::vector<size_t> fo = rd->fieldOrder();

                for (std::vector<size_t>::const_iterator it = fo.begin(); it != fo.end(); ++it)
                {
                    switch (*it)
                    {
                        case 0:
                            ::avro::decode(d, v.updatedPropertiesMap);
                            break;

                        case 1:
                            ::avro::decode(d, v.info);
                            break;

                        default:
                            break;
                    }
                }
            }
            else
            {
                ::avro::decode(d, v.updatedPropertiesMap);
                ::avro::decode(d, v.info);
            }
        }
    };
} // end namespace avro

#endif // __ALTER_SYSTEM_PROPERTIES_H__
